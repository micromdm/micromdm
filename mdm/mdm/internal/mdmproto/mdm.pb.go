// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdm.proto

/*
Package mdmproto is a generated protocol buffer package.

It is generated from these files:
	mdm.proto

It has these top-level messages:
	CommandPayload
	Command
	InstallProfile
	RemoveProfile
	InstallProvisioningProfile
	RemoveProvisioningProfile
	InstalledApplicationList
	DeviceInformation
	ClearPasscode
	DeviceLock
	EraseDevice
	RequestMirroring
	Restrictions
	UnlockUserAccount
	DeleteUser
	EnableLostMode
	InstallApplication
	InstallApplicationOptions
	InstallApplicationConfiguration
	InstallApplicationAttributes
	AccountConfiguration
	AutoSetupAdminAccounts
	ResultPayload
	ErrorChain
*/
package mdmproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResultPayload_Status int32

const (
	ResultPayload_Acknowledged       ResultPayload_Status = 0
	ResultPayload_Error              ResultPayload_Status = 1
	ResultPayload_CommandFormatError ResultPayload_Status = 2
	ResultPayload_Idle               ResultPayload_Status = 3
	ResultPayload_NotNow             ResultPayload_Status = 4
)

var ResultPayload_Status_name = map[int32]string{
	0: "Acknowledged",
	1: "Error",
	2: "CommandFormatError",
	3: "Idle",
	4: "NotNow",
}
var ResultPayload_Status_value = map[string]int32{
	"Acknowledged":       0,
	"Error":              1,
	"CommandFormatError": 2,
	"Idle":               3,
	"NotNow":             4,
}

func (x ResultPayload_Status) String() string {
	return proto.EnumName(ResultPayload_Status_name, int32(x))
}
func (ResultPayload_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{22, 0} }

type CommandPayload struct {
	CommandUuid string   `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid" json:"command_uuid,omitempty"`
	Command     *Command `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
}

func (m *CommandPayload) Reset()                    { *m = CommandPayload{} }
func (m *CommandPayload) String() string            { return proto.CompactTextString(m) }
func (*CommandPayload) ProtoMessage()               {}
func (*CommandPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommandPayload) GetCommandUuid() string {
	if m != nil {
		return m.CommandUuid
	}
	return ""
}

func (m *CommandPayload) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type Command struct {
	RequestType string `protobuf:"bytes,1,opt,name=request_type,json=requestType" json:"request_type,omitempty"`
	//
	// Request Types that do not have additional fields:
	// - ProfileList
	// - ProvisioningProfileList
	// - CertificateList",
	// - SecurityInfo
	// - RestartDevice
	// - ShutDownDevice
	// - StopMirroring
	// - ClearRestrictionsPassword
	// - UserList
	// - LogOutUser
	// - PlayLostModeSound
	// - DisableLostMode
	// - DeviceLocation
	//
	// Types that are valid to be assigned to Request:
	//	*Command_InstallProfile
	//	*Command_RemoveProfile
	//	*Command_InstallProvisioningProfile
	//	*Command_RemoveProfisioningProfile
	//	*Command_InstalledApplicationList
	//	*Command_DeviceInformation
	//	*Command_DeviceLock
	//	*Command_ClearPasscode
	//	*Command_EraseDevice
	//	*Command_RequestMirroring
	//	*Command_Restrictions
	//	*Command_UnlockUserAccount
	//	*Command_DeleteUser
	//	*Command_EnableLostMode
	//	*Command_InstallApplication
	//	*Command_AccountConfiguration
	Request isCommand_Request `protobuf_oneof:"request"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isCommand_Request interface {
	isCommand_Request()
}

type Command_InstallProfile struct {
	InstallProfile *InstallProfile `protobuf:"bytes,2,opt,name=install_profile,json=installProfile,oneof"`
}
type Command_RemoveProfile struct {
	RemoveProfile *RemoveProfile `protobuf:"bytes,3,opt,name=remove_profile,json=removeProfile,oneof"`
}
type Command_InstallProvisioningProfile struct {
	InstallProvisioningProfile *InstallProvisioningProfile `protobuf:"bytes,4,opt,name=install_provisioning_profile,json=installProvisioningProfile,oneof"`
}
type Command_RemoveProfisioningProfile struct {
	RemoveProfisioningProfile *RemoveProvisioningProfile `protobuf:"bytes,5,opt,name=remove_profisioning_profile,json=removeProfisioningProfile,oneof"`
}
type Command_InstalledApplicationList struct {
	InstalledApplicationList *InstalledApplicationList `protobuf:"bytes,6,opt,name=installed_application_list,json=installedApplicationList,oneof"`
}
type Command_DeviceInformation struct {
	DeviceInformation *DeviceInformation `protobuf:"bytes,7,opt,name=device_information,json=deviceInformation,oneof"`
}
type Command_DeviceLock struct {
	DeviceLock *DeviceLock `protobuf:"bytes,8,opt,name=device_lock,json=deviceLock,oneof"`
}
type Command_ClearPasscode struct {
	ClearPasscode *ClearPasscode `protobuf:"bytes,9,opt,name=clear_passcode,json=clearPasscode,oneof"`
}
type Command_EraseDevice struct {
	EraseDevice *EraseDevice `protobuf:"bytes,10,opt,name=erase_device,json=eraseDevice,oneof"`
}
type Command_RequestMirroring struct {
	RequestMirroring *RequestMirroring `protobuf:"bytes,11,opt,name=request_mirroring,json=requestMirroring,oneof"`
}
type Command_Restrictions struct {
	Restrictions *Restrictions `protobuf:"bytes,12,opt,name=restrictions,oneof"`
}
type Command_UnlockUserAccount struct {
	UnlockUserAccount *UnlockUserAccount `protobuf:"bytes,13,opt,name=unlock_user_account,json=unlockUserAccount,oneof"`
}
type Command_DeleteUser struct {
	DeleteUser *DeleteUser `protobuf:"bytes,14,opt,name=delete_user,json=deleteUser,oneof"`
}
type Command_EnableLostMode struct {
	EnableLostMode *EnableLostMode `protobuf:"bytes,15,opt,name=enable_lost_mode,json=enableLostMode,oneof"`
}
type Command_InstallApplication struct {
	InstallApplication *InstallApplication `protobuf:"bytes,16,opt,name=install_application,json=installApplication,oneof"`
}
type Command_AccountConfiguration struct {
	AccountConfiguration *AccountConfiguration `protobuf:"bytes,17,opt,name=account_configuration,json=accountConfiguration,oneof"`
}

func (*Command_InstallProfile) isCommand_Request()             {}
func (*Command_RemoveProfile) isCommand_Request()              {}
func (*Command_InstallProvisioningProfile) isCommand_Request() {}
func (*Command_RemoveProfisioningProfile) isCommand_Request()  {}
func (*Command_InstalledApplicationList) isCommand_Request()   {}
func (*Command_DeviceInformation) isCommand_Request()          {}
func (*Command_DeviceLock) isCommand_Request()                 {}
func (*Command_ClearPasscode) isCommand_Request()              {}
func (*Command_EraseDevice) isCommand_Request()                {}
func (*Command_RequestMirroring) isCommand_Request()           {}
func (*Command_Restrictions) isCommand_Request()               {}
func (*Command_UnlockUserAccount) isCommand_Request()          {}
func (*Command_DeleteUser) isCommand_Request()                 {}
func (*Command_EnableLostMode) isCommand_Request()             {}
func (*Command_InstallApplication) isCommand_Request()         {}
func (*Command_AccountConfiguration) isCommand_Request()       {}

func (m *Command) GetRequest() isCommand_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Command) GetRequestType() string {
	if m != nil {
		return m.RequestType
	}
	return ""
}

func (m *Command) GetInstallProfile() *InstallProfile {
	if x, ok := m.GetRequest().(*Command_InstallProfile); ok {
		return x.InstallProfile
	}
	return nil
}

func (m *Command) GetRemoveProfile() *RemoveProfile {
	if x, ok := m.GetRequest().(*Command_RemoveProfile); ok {
		return x.RemoveProfile
	}
	return nil
}

func (m *Command) GetInstallProvisioningProfile() *InstallProvisioningProfile {
	if x, ok := m.GetRequest().(*Command_InstallProvisioningProfile); ok {
		return x.InstallProvisioningProfile
	}
	return nil
}

func (m *Command) GetRemoveProfisioningProfile() *RemoveProvisioningProfile {
	if x, ok := m.GetRequest().(*Command_RemoveProfisioningProfile); ok {
		return x.RemoveProfisioningProfile
	}
	return nil
}

func (m *Command) GetInstalledApplicationList() *InstalledApplicationList {
	if x, ok := m.GetRequest().(*Command_InstalledApplicationList); ok {
		return x.InstalledApplicationList
	}
	return nil
}

func (m *Command) GetDeviceInformation() *DeviceInformation {
	if x, ok := m.GetRequest().(*Command_DeviceInformation); ok {
		return x.DeviceInformation
	}
	return nil
}

func (m *Command) GetDeviceLock() *DeviceLock {
	if x, ok := m.GetRequest().(*Command_DeviceLock); ok {
		return x.DeviceLock
	}
	return nil
}

func (m *Command) GetClearPasscode() *ClearPasscode {
	if x, ok := m.GetRequest().(*Command_ClearPasscode); ok {
		return x.ClearPasscode
	}
	return nil
}

func (m *Command) GetEraseDevice() *EraseDevice {
	if x, ok := m.GetRequest().(*Command_EraseDevice); ok {
		return x.EraseDevice
	}
	return nil
}

func (m *Command) GetRequestMirroring() *RequestMirroring {
	if x, ok := m.GetRequest().(*Command_RequestMirroring); ok {
		return x.RequestMirroring
	}
	return nil
}

func (m *Command) GetRestrictions() *Restrictions {
	if x, ok := m.GetRequest().(*Command_Restrictions); ok {
		return x.Restrictions
	}
	return nil
}

func (m *Command) GetUnlockUserAccount() *UnlockUserAccount {
	if x, ok := m.GetRequest().(*Command_UnlockUserAccount); ok {
		return x.UnlockUserAccount
	}
	return nil
}

func (m *Command) GetDeleteUser() *DeleteUser {
	if x, ok := m.GetRequest().(*Command_DeleteUser); ok {
		return x.DeleteUser
	}
	return nil
}

func (m *Command) GetEnableLostMode() *EnableLostMode {
	if x, ok := m.GetRequest().(*Command_EnableLostMode); ok {
		return x.EnableLostMode
	}
	return nil
}

func (m *Command) GetInstallApplication() *InstallApplication {
	if x, ok := m.GetRequest().(*Command_InstallApplication); ok {
		return x.InstallApplication
	}
	return nil
}

func (m *Command) GetAccountConfiguration() *AccountConfiguration {
	if x, ok := m.GetRequest().(*Command_AccountConfiguration); ok {
		return x.AccountConfiguration
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Command) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Command_OneofMarshaler, _Command_OneofUnmarshaler, _Command_OneofSizer, []interface{}{
		(*Command_InstallProfile)(nil),
		(*Command_RemoveProfile)(nil),
		(*Command_InstallProvisioningProfile)(nil),
		(*Command_RemoveProfisioningProfile)(nil),
		(*Command_InstalledApplicationList)(nil),
		(*Command_DeviceInformation)(nil),
		(*Command_DeviceLock)(nil),
		(*Command_ClearPasscode)(nil),
		(*Command_EraseDevice)(nil),
		(*Command_RequestMirroring)(nil),
		(*Command_Restrictions)(nil),
		(*Command_UnlockUserAccount)(nil),
		(*Command_DeleteUser)(nil),
		(*Command_EnableLostMode)(nil),
		(*Command_InstallApplication)(nil),
		(*Command_AccountConfiguration)(nil),
	}
}

func _Command_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Command)
	// request
	switch x := m.Request.(type) {
	case *Command_InstallProfile:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstallProfile); err != nil {
			return err
		}
	case *Command_RemoveProfile:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveProfile); err != nil {
			return err
		}
	case *Command_InstallProvisioningProfile:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstallProvisioningProfile); err != nil {
			return err
		}
	case *Command_RemoveProfisioningProfile:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveProfisioningProfile); err != nil {
			return err
		}
	case *Command_InstalledApplicationList:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstalledApplicationList); err != nil {
			return err
		}
	case *Command_DeviceInformation:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceInformation); err != nil {
			return err
		}
	case *Command_DeviceLock:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceLock); err != nil {
			return err
		}
	case *Command_ClearPasscode:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClearPasscode); err != nil {
			return err
		}
	case *Command_EraseDevice:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EraseDevice); err != nil {
			return err
		}
	case *Command_RequestMirroring:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestMirroring); err != nil {
			return err
		}
	case *Command_Restrictions:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Restrictions); err != nil {
			return err
		}
	case *Command_UnlockUserAccount:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnlockUserAccount); err != nil {
			return err
		}
	case *Command_DeleteUser:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeleteUser); err != nil {
			return err
		}
	case *Command_EnableLostMode:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnableLostMode); err != nil {
			return err
		}
	case *Command_InstallApplication:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstallApplication); err != nil {
			return err
		}
	case *Command_AccountConfiguration:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AccountConfiguration); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Command.Request has unexpected type %T", x)
	}
	return nil
}

func _Command_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Command)
	switch tag {
	case 2: // request.install_profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InstallProfile)
		err := b.DecodeMessage(msg)
		m.Request = &Command_InstallProfile{msg}
		return true, err
	case 3: // request.remove_profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveProfile)
		err := b.DecodeMessage(msg)
		m.Request = &Command_RemoveProfile{msg}
		return true, err
	case 4: // request.install_provisioning_profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InstallProvisioningProfile)
		err := b.DecodeMessage(msg)
		m.Request = &Command_InstallProvisioningProfile{msg}
		return true, err
	case 5: // request.remove_profisioning_profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveProvisioningProfile)
		err := b.DecodeMessage(msg)
		m.Request = &Command_RemoveProfisioningProfile{msg}
		return true, err
	case 6: // request.installed_application_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InstalledApplicationList)
		err := b.DecodeMessage(msg)
		m.Request = &Command_InstalledApplicationList{msg}
		return true, err
	case 7: // request.device_information
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceInformation)
		err := b.DecodeMessage(msg)
		m.Request = &Command_DeviceInformation{msg}
		return true, err
	case 8: // request.device_lock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceLock)
		err := b.DecodeMessage(msg)
		m.Request = &Command_DeviceLock{msg}
		return true, err
	case 9: // request.clear_passcode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClearPasscode)
		err := b.DecodeMessage(msg)
		m.Request = &Command_ClearPasscode{msg}
		return true, err
	case 10: // request.erase_device
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EraseDevice)
		err := b.DecodeMessage(msg)
		m.Request = &Command_EraseDevice{msg}
		return true, err
	case 11: // request.request_mirroring
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestMirroring)
		err := b.DecodeMessage(msg)
		m.Request = &Command_RequestMirroring{msg}
		return true, err
	case 12: // request.restrictions
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Restrictions)
		err := b.DecodeMessage(msg)
		m.Request = &Command_Restrictions{msg}
		return true, err
	case 13: // request.unlock_user_account
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnlockUserAccount)
		err := b.DecodeMessage(msg)
		m.Request = &Command_UnlockUserAccount{msg}
		return true, err
	case 14: // request.delete_user
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeleteUser)
		err := b.DecodeMessage(msg)
		m.Request = &Command_DeleteUser{msg}
		return true, err
	case 15: // request.enable_lost_mode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnableLostMode)
		err := b.DecodeMessage(msg)
		m.Request = &Command_EnableLostMode{msg}
		return true, err
	case 16: // request.install_application
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InstallApplication)
		err := b.DecodeMessage(msg)
		m.Request = &Command_InstallApplication{msg}
		return true, err
	case 17: // request.account_configuration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccountConfiguration)
		err := b.DecodeMessage(msg)
		m.Request = &Command_AccountConfiguration{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Command_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Command)
	// request
	switch x := m.Request.(type) {
	case *Command_InstallProfile:
		s := proto.Size(x.InstallProfile)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_RemoveProfile:
		s := proto.Size(x.RemoveProfile)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_InstallProvisioningProfile:
		s := proto.Size(x.InstallProvisioningProfile)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_RemoveProfisioningProfile:
		s := proto.Size(x.RemoveProfisioningProfile)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_InstalledApplicationList:
		s := proto.Size(x.InstalledApplicationList)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_DeviceInformation:
		s := proto.Size(x.DeviceInformation)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_DeviceLock:
		s := proto.Size(x.DeviceLock)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_ClearPasscode:
		s := proto.Size(x.ClearPasscode)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_EraseDevice:
		s := proto.Size(x.EraseDevice)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_RequestMirroring:
		s := proto.Size(x.RequestMirroring)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Restrictions:
		s := proto.Size(x.Restrictions)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_UnlockUserAccount:
		s := proto.Size(x.UnlockUserAccount)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_DeleteUser:
		s := proto.Size(x.DeleteUser)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_EnableLostMode:
		s := proto.Size(x.EnableLostMode)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_InstallApplication:
		s := proto.Size(x.InstallApplication)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_AccountConfiguration:
		s := proto.Size(x.AccountConfiguration)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type InstallProfile struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *InstallProfile) Reset()                    { *m = InstallProfile{} }
func (m *InstallProfile) String() string            { return proto.CompactTextString(m) }
func (*InstallProfile) ProtoMessage()               {}
func (*InstallProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InstallProfile) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type RemoveProfile struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *RemoveProfile) Reset()                    { *m = RemoveProfile{} }
func (m *RemoveProfile) String() string            { return proto.CompactTextString(m) }
func (*RemoveProfile) ProtoMessage()               {}
func (*RemoveProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RemoveProfile) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type InstallProvisioningProfile struct {
	ProvisioningProfile []byte `protobuf:"bytes,1,opt,name=provisioning_profile,json=provisioningProfile,proto3" json:"provisioning_profile,omitempty"`
}

func (m *InstallProvisioningProfile) Reset()                    { *m = InstallProvisioningProfile{} }
func (m *InstallProvisioningProfile) String() string            { return proto.CompactTextString(m) }
func (*InstallProvisioningProfile) ProtoMessage()               {}
func (*InstallProvisioningProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *InstallProvisioningProfile) GetProvisioningProfile() []byte {
	if m != nil {
		return m.ProvisioningProfile
	}
	return nil
}

type RemoveProvisioningProfile struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *RemoveProvisioningProfile) Reset()                    { *m = RemoveProvisioningProfile{} }
func (m *RemoveProvisioningProfile) String() string            { return proto.CompactTextString(m) }
func (*RemoveProvisioningProfile) ProtoMessage()               {}
func (*RemoveProvisioningProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RemoveProvisioningProfile) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type InstalledApplicationList struct {
	Identifiers     []string `protobuf:"bytes,1,rep,name=identifiers" json:"identifiers,omitempty"`
	ManagedAppsOnly bool     `protobuf:"varint,2,opt,name=managed_apps_only,json=managedAppsOnly" json:"managed_apps_only,omitempty"`
}

func (m *InstalledApplicationList) Reset()                    { *m = InstalledApplicationList{} }
func (m *InstalledApplicationList) String() string            { return proto.CompactTextString(m) }
func (*InstalledApplicationList) ProtoMessage()               {}
func (*InstalledApplicationList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InstalledApplicationList) GetIdentifiers() []string {
	if m != nil {
		return m.Identifiers
	}
	return nil
}

func (m *InstalledApplicationList) GetManagedAppsOnly() bool {
	if m != nil {
		return m.ManagedAppsOnly
	}
	return false
}

type DeviceInformation struct {
	Queries []string `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
}

func (m *DeviceInformation) Reset()                    { *m = DeviceInformation{} }
func (m *DeviceInformation) String() string            { return proto.CompactTextString(m) }
func (*DeviceInformation) ProtoMessage()               {}
func (*DeviceInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeviceInformation) GetQueries() []string {
	if m != nil {
		return m.Queries
	}
	return nil
}

type ClearPasscode struct {
	UnlockToken []byte `protobuf:"bytes,1,opt,name=unlock_token,json=unlockToken,proto3" json:"unlock_token,omitempty"`
}

func (m *ClearPasscode) Reset()                    { *m = ClearPasscode{} }
func (m *ClearPasscode) String() string            { return proto.CompactTextString(m) }
func (*ClearPasscode) ProtoMessage()               {}
func (*ClearPasscode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ClearPasscode) GetUnlockToken() []byte {
	if m != nil {
		return m.UnlockToken
	}
	return nil
}

type DeviceLock struct {
	Pin         string `protobuf:"bytes,1,opt,name=pin" json:"pin,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
}

func (m *DeviceLock) Reset()                    { *m = DeviceLock{} }
func (m *DeviceLock) String() string            { return proto.CompactTextString(m) }
func (*DeviceLock) ProtoMessage()               {}
func (*DeviceLock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeviceLock) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *DeviceLock) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeviceLock) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type EraseDevice struct {
	Pin              string `protobuf:"bytes,1,opt,name=pin" json:"pin,omitempty"`
	PreserveDataPlan bool   `protobuf:"varint,2,opt,name=preserve_data_plan,json=preserveDataPlan" json:"preserve_data_plan,omitempty"`
}

func (m *EraseDevice) Reset()                    { *m = EraseDevice{} }
func (m *EraseDevice) String() string            { return proto.CompactTextString(m) }
func (*EraseDevice) ProtoMessage()               {}
func (*EraseDevice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *EraseDevice) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *EraseDevice) GetPreserveDataPlan() bool {
	if m != nil {
		return m.PreserveDataPlan
	}
	return false
}

type RequestMirroring struct {
	DestinationName     string `protobuf:"bytes,1,opt,name=destination_name,json=destinationName" json:"destination_name,omitempty"`
	DestinationDeviceId string `protobuf:"bytes,2,opt,name=destination_device_id,json=destinationDeviceId" json:"destination_device_id,omitempty"`
	ScanTime            string `protobuf:"bytes,3,opt,name=scan_time,json=scanTime" json:"scan_time,omitempty"`
	Password            string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
}

func (m *RequestMirroring) Reset()                    { *m = RequestMirroring{} }
func (m *RequestMirroring) String() string            { return proto.CompactTextString(m) }
func (*RequestMirroring) ProtoMessage()               {}
func (*RequestMirroring) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RequestMirroring) GetDestinationName() string {
	if m != nil {
		return m.DestinationName
	}
	return ""
}

func (m *RequestMirroring) GetDestinationDeviceId() string {
	if m != nil {
		return m.DestinationDeviceId
	}
	return ""
}

func (m *RequestMirroring) GetScanTime() string {
	if m != nil {
		return m.ScanTime
	}
	return ""
}

func (m *RequestMirroring) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Restrictions struct {
	ProfileRestrictions bool `protobuf:"varint,1,opt,name=profile_restrictions,json=profileRestrictions" json:"profile_restrictions,omitempty"`
}

func (m *Restrictions) Reset()                    { *m = Restrictions{} }
func (m *Restrictions) String() string            { return proto.CompactTextString(m) }
func (*Restrictions) ProtoMessage()               {}
func (*Restrictions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Restrictions) GetProfileRestrictions() bool {
	if m != nil {
		return m.ProfileRestrictions
	}
	return false
}

type UnlockUserAccount struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *UnlockUserAccount) Reset()                    { *m = UnlockUserAccount{} }
func (m *UnlockUserAccount) String() string            { return proto.CompactTextString(m) }
func (*UnlockUserAccount) ProtoMessage()               {}
func (*UnlockUserAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UnlockUserAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type DeleteUser struct {
	Username      string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	ForceDeletion bool   `protobuf:"varint,2,opt,name=force_deletion,json=forceDeletion" json:"force_deletion,omitempty"`
}

func (m *DeleteUser) Reset()                    { *m = DeleteUser{} }
func (m *DeleteUser) String() string            { return proto.CompactTextString(m) }
func (*DeleteUser) ProtoMessage()               {}
func (*DeleteUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DeleteUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DeleteUser) GetForceDeletion() bool {
	if m != nil {
		return m.ForceDeletion
	}
	return false
}

type EnableLostMode struct {
	Message     string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	Footnote    string `protobuf:"bytes,3,opt,name=footnote" json:"footnote,omitempty"`
}

func (m *EnableLostMode) Reset()                    { *m = EnableLostMode{} }
func (m *EnableLostMode) String() string            { return proto.CompactTextString(m) }
func (*EnableLostMode) ProtoMessage()               {}
func (*EnableLostMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *EnableLostMode) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *EnableLostMode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *EnableLostMode) GetFootnote() string {
	if m != nil {
		return m.Footnote
	}
	return ""
}

type InstallApplication struct {
	ItunesStoreId         int64                            `protobuf:"varint,1,opt,name=itunes_store_id,json=itunesStoreId" json:"itunes_store_id,omitempty"`
	Identifier            string                           `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	Options               *InstallApplicationOptions       `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	ManifestUrl           string                           `protobuf:"bytes,4,opt,name=manifest_url,json=manifestUrl" json:"manifest_url,omitempty"`
	ManagementFlags       int64                            `protobuf:"varint,5,opt,name=management_flags,json=managementFlags" json:"management_flags,omitempty"`
	Configuration         *InstallApplicationConfiguration `protobuf:"bytes,6,opt,name=configuration" json:"configuration,omitempty"`
	Attributes            *InstallApplicationAttributes    `protobuf:"bytes,7,opt,name=attributes" json:"attributes,omitempty"`
	ChangeManagementState string                           `protobuf:"bytes,8,opt,name=change_management_state,json=changeManagementState" json:"change_management_state,omitempty"`
}

func (m *InstallApplication) Reset()                    { *m = InstallApplication{} }
func (m *InstallApplication) String() string            { return proto.CompactTextString(m) }
func (*InstallApplication) ProtoMessage()               {}
func (*InstallApplication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *InstallApplication) GetItunesStoreId() int64 {
	if m != nil {
		return m.ItunesStoreId
	}
	return 0
}

func (m *InstallApplication) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *InstallApplication) GetOptions() *InstallApplicationOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *InstallApplication) GetManifestUrl() string {
	if m != nil {
		return m.ManifestUrl
	}
	return ""
}

func (m *InstallApplication) GetManagementFlags() int64 {
	if m != nil {
		return m.ManagementFlags
	}
	return 0
}

func (m *InstallApplication) GetConfiguration() *InstallApplicationConfiguration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *InstallApplication) GetAttributes() *InstallApplicationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *InstallApplication) GetChangeManagementState() string {
	if m != nil {
		return m.ChangeManagementState
	}
	return ""
}

type InstallApplicationOptions struct {
	PurchaseMethod int64 `protobuf:"varint,1,opt,name=purchase_method,json=purchaseMethod" json:"purchase_method,omitempty"`
}

func (m *InstallApplicationOptions) Reset()                    { *m = InstallApplicationOptions{} }
func (m *InstallApplicationOptions) String() string            { return proto.CompactTextString(m) }
func (*InstallApplicationOptions) ProtoMessage()               {}
func (*InstallApplicationOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *InstallApplicationOptions) GetPurchaseMethod() int64 {
	if m != nil {
		return m.PurchaseMethod
	}
	return 0
}

type InstallApplicationConfiguration struct {
}

func (m *InstallApplicationConfiguration) Reset()         { *m = InstallApplicationConfiguration{} }
func (m *InstallApplicationConfiguration) String() string { return proto.CompactTextString(m) }
func (*InstallApplicationConfiguration) ProtoMessage()    {}
func (*InstallApplicationConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

type InstallApplicationAttributes struct {
}

func (m *InstallApplicationAttributes) Reset()                    { *m = InstallApplicationAttributes{} }
func (m *InstallApplicationAttributes) String() string            { return proto.CompactTextString(m) }
func (*InstallApplicationAttributes) ProtoMessage()               {}
func (*InstallApplicationAttributes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type AccountConfiguration struct {
	SkipPrimarySetupAccountCreation      bool                      `protobuf:"varint,1,opt,name=skip_primary_setup_account_creation,json=skipPrimarySetupAccountCreation" json:"skip_primary_setup_account_creation,omitempty"`
	SkipPrimarySetupAccountAsRegularUser bool                      `protobuf:"varint,2,opt,name=skip_primary_setup_account_as_regular_user,json=skipPrimarySetupAccountAsRegularUser" json:"skip_primary_setup_account_as_regular_user,omitempty"`
	AutoSetupAdminAccounts               []*AutoSetupAdminAccounts `protobuf:"bytes,3,rep,name=auto_setup_admin_accounts,json=autoSetupAdminAccounts" json:"auto_setup_admin_accounts,omitempty"`
}

func (m *AccountConfiguration) Reset()                    { *m = AccountConfiguration{} }
func (m *AccountConfiguration) String() string            { return proto.CompactTextString(m) }
func (*AccountConfiguration) ProtoMessage()               {}
func (*AccountConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AccountConfiguration) GetSkipPrimarySetupAccountCreation() bool {
	if m != nil {
		return m.SkipPrimarySetupAccountCreation
	}
	return false
}

func (m *AccountConfiguration) GetSkipPrimarySetupAccountAsRegularUser() bool {
	if m != nil {
		return m.SkipPrimarySetupAccountAsRegularUser
	}
	return false
}

func (m *AccountConfiguration) GetAutoSetupAdminAccounts() []*AutoSetupAdminAccounts {
	if m != nil {
		return m.AutoSetupAdminAccounts
	}
	return nil
}

type AutoSetupAdminAccounts struct {
	ShortName    string `protobuf:"bytes,1,opt,name=short_name,json=shortName" json:"short_name,omitempty"`
	FullName     string `protobuf:"bytes,2,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	PasswordHash []byte `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Hidden       bool   `protobuf:"varint,4,opt,name=hidden" json:"hidden,omitempty"`
}

func (m *AutoSetupAdminAccounts) Reset()                    { *m = AutoSetupAdminAccounts{} }
func (m *AutoSetupAdminAccounts) String() string            { return proto.CompactTextString(m) }
func (*AutoSetupAdminAccounts) ProtoMessage()               {}
func (*AutoSetupAdminAccounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AutoSetupAdminAccounts) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *AutoSetupAdminAccounts) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *AutoSetupAdminAccounts) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *AutoSetupAdminAccounts) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

type ResultPayload struct {
	Udid        string        `protobuf:"bytes,1,opt,name=udid" json:"udid,omitempty"`
	CommandUuid string        `protobuf:"bytes,2,opt,name=command_uuid,json=commandUuid" json:"command_uuid,omitempty"`
	ErrorChain  []*ErrorChain `protobuf:"bytes,3,rep,name=error_chain,json=errorChain" json:"error_chain,omitempty"`
}

func (m *ResultPayload) Reset()                    { *m = ResultPayload{} }
func (m *ResultPayload) String() string            { return proto.CompactTextString(m) }
func (*ResultPayload) ProtoMessage()               {}
func (*ResultPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ResultPayload) GetUdid() string {
	if m != nil {
		return m.Udid
	}
	return ""
}

func (m *ResultPayload) GetCommandUuid() string {
	if m != nil {
		return m.CommandUuid
	}
	return ""
}

func (m *ResultPayload) GetErrorChain() []*ErrorChain {
	if m != nil {
		return m.ErrorChain
	}
	return nil
}

type ErrorChain struct {
	LocalizedDescription string `protobuf:"bytes,1,opt,name=localized_description,json=localizedDescription" json:"localized_description,omitempty"`
	UsEnglishDescription string `protobuf:"bytes,2,opt,name=us_english_description,json=usEnglishDescription" json:"us_english_description,omitempty"`
	// The ErrorDomain and ErrorCode keys contain internal codes used by Apple
	// that may be useful for diagnostics. Your host should not rely on these
	// values, as they may change between software releases.
	ErrorDomain string `protobuf:"bytes,3,opt,name=error_domain,json=errorDomain" json:"error_domain,omitempty"`
	ErrorCode   int32  `protobuf:"varint,4,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *ErrorChain) Reset()                    { *m = ErrorChain{} }
func (m *ErrorChain) String() string            { return proto.CompactTextString(m) }
func (*ErrorChain) ProtoMessage()               {}
func (*ErrorChain) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ErrorChain) GetLocalizedDescription() string {
	if m != nil {
		return m.LocalizedDescription
	}
	return ""
}

func (m *ErrorChain) GetUsEnglishDescription() string {
	if m != nil {
		return m.UsEnglishDescription
	}
	return ""
}

func (m *ErrorChain) GetErrorDomain() string {
	if m != nil {
		return m.ErrorDomain
	}
	return ""
}

func (m *ErrorChain) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*CommandPayload)(nil), "mdmproto.CommandPayload")
	proto.RegisterType((*Command)(nil), "mdmproto.Command")
	proto.RegisterType((*InstallProfile)(nil), "mdmproto.InstallProfile")
	proto.RegisterType((*RemoveProfile)(nil), "mdmproto.RemoveProfile")
	proto.RegisterType((*InstallProvisioningProfile)(nil), "mdmproto.InstallProvisioningProfile")
	proto.RegisterType((*RemoveProvisioningProfile)(nil), "mdmproto.RemoveProvisioningProfile")
	proto.RegisterType((*InstalledApplicationList)(nil), "mdmproto.InstalledApplicationList")
	proto.RegisterType((*DeviceInformation)(nil), "mdmproto.DeviceInformation")
	proto.RegisterType((*ClearPasscode)(nil), "mdmproto.ClearPasscode")
	proto.RegisterType((*DeviceLock)(nil), "mdmproto.DeviceLock")
	proto.RegisterType((*EraseDevice)(nil), "mdmproto.EraseDevice")
	proto.RegisterType((*RequestMirroring)(nil), "mdmproto.RequestMirroring")
	proto.RegisterType((*Restrictions)(nil), "mdmproto.Restrictions")
	proto.RegisterType((*UnlockUserAccount)(nil), "mdmproto.UnlockUserAccount")
	proto.RegisterType((*DeleteUser)(nil), "mdmproto.DeleteUser")
	proto.RegisterType((*EnableLostMode)(nil), "mdmproto.EnableLostMode")
	proto.RegisterType((*InstallApplication)(nil), "mdmproto.InstallApplication")
	proto.RegisterType((*InstallApplicationOptions)(nil), "mdmproto.InstallApplicationOptions")
	proto.RegisterType((*InstallApplicationConfiguration)(nil), "mdmproto.InstallApplicationConfiguration")
	proto.RegisterType((*InstallApplicationAttributes)(nil), "mdmproto.InstallApplicationAttributes")
	proto.RegisterType((*AccountConfiguration)(nil), "mdmproto.AccountConfiguration")
	proto.RegisterType((*AutoSetupAdminAccounts)(nil), "mdmproto.AutoSetupAdminAccounts")
	proto.RegisterType((*ResultPayload)(nil), "mdmproto.ResultPayload")
	proto.RegisterType((*ErrorChain)(nil), "mdmproto.ErrorChain")
	proto.RegisterEnum("mdmproto.ResultPayload_Status", ResultPayload_Status_name, ResultPayload_Status_value)
}

func init() { proto.RegisterFile("mdm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1561 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x57, 0xdb, 0x6e, 0xdc, 0x36,
	0x13, 0xde, 0xf5, 0x3a, 0xb6, 0x77, 0xf6, 0xe0, 0x35, 0x7d, 0x88, 0x6c, 0xe7, 0x4f, 0x1c, 0x25,
	0x7f, 0xfe, 0x24, 0x7f, 0x9b, 0xa0, 0x4e, 0x0f, 0x40, 0xd1, 0x02, 0x75, 0xed, 0x04, 0x6b, 0xc0,
	0x27, 0xc8, 0x31, 0x50, 0x20, 0x17, 0x2a, 0x2d, 0x71, 0x77, 0x09, 0x4b, 0xa4, 0x42, 0x52, 0x0e,
	0xdc, 0xb7, 0xe8, 0x75, 0xdf, 0xa0, 0x6f, 0xd0, 0x3e, 0x46, 0x5f, 0xa6, 0xb7, 0x05, 0x0f, 0xda,
	0xd5, 0x1e, 0xec, 0xde, 0x89, 0xdf, 0x0c, 0x3f, 0x92, 0x33, 0x9c, 0x6f, 0x28, 0xa8, 0xa7, 0x71,
	0xfa, 0x2a, 0x13, 0x5c, 0x71, 0xb4, 0x94, 0xc6, 0xa9, 0xf9, 0xf2, 0x7f, 0x86, 0xf6, 0x3e, 0x4f,
	0x53, 0xcc, 0xe2, 0x33, 0x7c, 0x93, 0x70, 0x1c, 0xa3, 0xc7, 0xd0, 0x8c, 0x2c, 0x12, 0xe6, 0x39,
	0x8d, 0xbd, 0xea, 0x4e, 0xf5, 0x79, 0x3d, 0x68, 0x38, 0xec, 0x22, 0xa7, 0x31, 0xfa, 0x3f, 0x2c,
	0xba, 0xa1, 0x37, 0xb7, 0x53, 0x7d, 0xde, 0xd8, 0x5d, 0x79, 0x55, 0x10, 0xbe, 0x72, 0x6c, 0x41,
	0xe1, 0xe1, 0xff, 0x5d, 0x87, 0x45, 0x07, 0x6a, 0x6e, 0x41, 0x3e, 0xe6, 0x44, 0xaa, 0x50, 0xdd,
	0x64, 0xa4, 0xe0, 0x76, 0xd8, 0xfb, 0x9b, 0x8c, 0xa0, 0x7d, 0x58, 0xa6, 0x4c, 0x2a, 0x9c, 0x24,
	0x61, 0x26, 0x78, 0x8f, 0x26, 0xc4, 0xad, 0xe1, 0x8d, 0xd6, 0x38, 0xb4, 0x0e, 0x67, 0xd6, 0xde,
	0xad, 0x04, 0x6d, 0x3a, 0x86, 0xa0, 0x1f, 0xa0, 0x2d, 0x48, 0xca, 0xaf, 0xc9, 0x90, 0xa3, 0x66,
	0x38, 0xee, 0x8f, 0x38, 0x02, 0x63, 0x1f, 0x51, 0xb4, 0x44, 0x19, 0x40, 0x03, 0x78, 0x50, 0xda,
	0xc6, 0x35, 0x95, 0x94, 0x33, 0xca, 0xfa, 0x43, 0xbe, 0x79, 0xc3, 0xf7, 0x74, 0xd6, 0x9e, 0x86,
	0xce, 0x23, 0xf2, 0x2d, 0x7a, 0xab, 0x15, 0x11, 0xd8, 0x2e, 0xef, 0x75, 0x72, 0xa1, 0x7b, 0x66,
	0xa1, 0x27, 0x33, 0x36, 0x3e, 0x63, 0x9d, 0xcd, 0xd2, 0x21, 0x26, 0x96, 0xb9, 0x84, 0x62, 0x13,
	0x24, 0x0e, 0x71, 0x96, 0x25, 0x34, 0xc2, 0x8a, 0x72, 0x16, 0x26, 0x54, 0x2a, 0x6f, 0xc1, 0xac,
	0xe2, 0x4f, 0x1d, 0x87, 0xc4, 0x7b, 0x23, 0xd7, 0x23, 0x2a, 0x55, 0xb7, 0x12, 0x78, 0xf4, 0x16,
	0x1b, 0x3a, 0x02, 0x14, 0x93, 0x6b, 0x1a, 0x91, 0x90, 0xb2, 0x1e, 0x17, 0xa9, 0xb1, 0x78, 0x8b,
	0x86, 0x7b, 0x7b, 0xc4, 0x7d, 0x60, 0x7c, 0x0e, 0x47, 0x2e, 0xdd, 0x4a, 0xb0, 0x12, 0x4f, 0x82,
	0xe8, 0x1b, 0x68, 0x38, 0xb6, 0x84, 0x47, 0x57, 0xde, 0x92, 0xa1, 0x59, 0x9b, 0xa4, 0x39, 0xe2,
	0xd1, 0x55, 0xb7, 0x12, 0x40, 0x3c, 0x1c, 0xe9, 0xec, 0x47, 0x09, 0xc1, 0x22, 0xcc, 0xb0, 0x94,
	0x11, 0x8f, 0x89, 0x57, 0x9f, 0xcc, 0xfe, 0xbe, 0xb6, 0x9f, 0x39, 0xb3, 0xce, 0x7e, 0x54, 0x06,
	0xd0, 0xb7, 0xd0, 0x24, 0x02, 0x4b, 0x12, 0x5a, 0x56, 0x0f, 0xcc, 0xfc, 0xf5, 0xd1, 0xfc, 0xb7,
	0xda, 0x6a, 0x37, 0xd0, 0xad, 0x04, 0x0d, 0x32, 0x1a, 0xa2, 0x43, 0x58, 0x29, 0xee, 0x78, 0x4a,
	0x85, 0xe0, 0x82, 0xb2, 0xbe, 0xd7, 0x30, 0x04, 0x5b, 0xe5, 0x2c, 0x1a, 0x97, 0xe3, 0xc2, 0xa3,
	0x5b, 0x09, 0x3a, 0x62, 0x02, 0x43, 0xdf, 0xe9, 0x72, 0x91, 0x4a, 0xd0, 0x48, 0x07, 0x44, 0x7a,
	0x4d, 0xc3, 0xb2, 0x51, 0x66, 0x19, 0x59, 0xbb, 0x95, 0x60, 0xcc, 0x1b, 0x1d, 0xc3, 0x6a, 0xce,
	0x74, 0xe8, 0xc2, 0x5c, 0x12, 0x11, 0xe2, 0x28, 0xe2, 0x39, 0x53, 0x5e, 0x6b, 0x32, 0x1d, 0x17,
	0xc6, 0xe9, 0x42, 0x12, 0xb1, 0x67, 0x5d, 0x74, 0x3a, 0xf2, 0x49, 0xd0, 0xa6, 0x23, 0x21, 0x8a,
	0x18, 0x3a, 0xaf, 0x3d, 0x9d, 0x0e, 0x6d, 0xd4, 0x33, 0x6c, 0x3a, 0x8a, 0x11, 0x3a, 0x80, 0x0e,
	0x61, 0xf8, 0x32, 0xd1, 0x79, 0xd4, 0x41, 0xd1, 0x09, 0x59, 0x9e, 0x2c, 0xe9, 0xb7, 0xc6, 0xe3,
	0x88, 0x4b, 0x75, 0x6c, 0x33, 0xd2, 0x26, 0x63, 0x08, 0x3a, 0x85, 0xd5, 0xa2, 0x20, 0x4b, 0xb7,
	0xd7, 0xeb, 0x18, 0xa2, 0x07, 0x53, 0x17, 0xb7, 0x74, 0x35, 0xbb, 0x95, 0x00, 0xd1, 0x29, 0x14,
	0x5d, 0xc0, 0xba, 0x0b, 0x49, 0x18, 0x71, 0xd6, 0xa3, 0xfd, 0x5c, 0x58, 0xca, 0x15, 0x43, 0xf9,
	0x70, 0x44, 0xe9, 0x22, 0xb0, 0x5f, 0xf6, 0xea, 0x56, 0x82, 0x35, 0x3c, 0x03, 0xff, 0xb1, 0x0e,
	0x8b, 0x2e, 0x8f, 0xfe, 0x4b, 0x68, 0x8f, 0x2b, 0x15, 0xf2, 0x60, 0x31, 0xb3, 0x32, 0x6b, 0xa4,
	0xaf, 0x19, 0x14, 0x43, 0xff, 0x35, 0xb4, 0xc6, 0x14, 0x09, 0x3d, 0x04, 0xa0, 0x31, 0x61, 0x8a,
	0xf6, 0x28, 0x11, 0x4e, 0x28, 0x4b, 0x88, 0x7f, 0x0a, 0x5b, 0xb7, 0x4b, 0x0e, 0xfa, 0x02, 0xd6,
	0x66, 0xca, 0x96, 0x5d, 0x75, 0x35, 0x9b, 0x9e, 0xe2, 0xbf, 0x86, 0xcd, 0x5b, 0xa5, 0x05, 0x21,
	0x98, 0x2f, 0x35, 0x03, 0xf3, 0xed, 0x0f, 0xc0, 0xbb, 0x4d, 0x25, 0xd0, 0x0e, 0x34, 0x46, 0x7b,
	0x95, 0x5e, 0x75, 0xa7, 0xa6, 0x75, 0xbe, 0x04, 0xa1, 0x97, 0xb0, 0x92, 0x62, 0x86, 0xfb, 0x56,
	0x8d, 0x64, 0xc8, 0x59, 0x72, 0x63, 0x94, 0x7e, 0x29, 0x58, 0x76, 0x86, 0xbd, 0x2c, 0x93, 0xa7,
	0x2c, 0xb9, 0xf1, 0x3f, 0x87, 0x95, 0x29, 0xcd, 0xd0, 0xb1, 0xfc, 0x98, 0x13, 0x41, 0x49, 0x41,
	0x5f, 0x0c, 0xfd, 0x5d, 0x68, 0x8d, 0xd5, 0xb7, 0x6e, 0x3b, 0xae, 0x12, 0x14, 0xbf, 0x22, 0xcc,
	0x45, 0xa1, 0x61, 0xb1, 0xf7, 0x1a, 0xf2, 0x3f, 0x00, 0x8c, 0xf4, 0x04, 0x75, 0xa0, 0x96, 0x51,
	0xe6, 0x4e, 0xab, 0x3f, 0xf5, 0x6a, 0x29, 0x91, 0x12, 0xf7, 0x6d, 0x3b, 0xaa, 0x07, 0xc5, 0x50,
	0x93, 0x67, 0x03, 0xce, 0x48, 0xc8, 0xf2, 0xf4, 0x92, 0x08, 0xd3, 0x69, 0xea, 0x41, 0xc3, 0x60,
	0x27, 0x06, 0xf2, 0x8f, 0xa1, 0x51, 0x12, 0x8c, 0x19, 0xec, 0x9f, 0x01, 0xca, 0x04, 0x91, 0x44,
	0x5c, 0x93, 0x30, 0xc6, 0x0a, 0x87, 0x59, 0x82, 0x99, 0x8b, 0x46, 0xa7, 0xb0, 0x1c, 0x60, 0x85,
	0xcf, 0x12, 0xcc, 0xfc, 0xdf, 0xab, 0xd0, 0x99, 0xd4, 0x0f, 0xf4, 0x02, 0x3a, 0x31, 0x91, 0x8a,
	0x32, 0xab, 0xea, 0x0c, 0xa7, 0x45, 0x7b, 0x5d, 0x2e, 0xe1, 0x27, 0x38, 0x25, 0x68, 0x17, 0xd6,
	0xcb, 0xae, 0x85, 0x64, 0xc7, 0xee, 0x64, 0xab, 0x25, 0xa3, 0x0b, 0x7b, 0x8c, 0xb6, 0xa1, 0x2e,
	0x23, 0xcc, 0x42, 0x45, 0x53, 0xe2, 0x8e, 0xb8, 0xa4, 0x81, 0xf7, 0x34, 0x25, 0x68, 0x0b, 0x96,
	0xb4, 0xd4, 0x7e, 0xe2, 0x22, 0x36, 0x8d, 0xb1, 0x1e, 0x0c, 0xc7, 0xfe, 0x1e, 0x34, 0xcb, 0x2a,
	0xe5, 0x6e, 0xa6, 0xbe, 0x54, 0xe1, 0x98, 0xb6, 0x55, 0xcd, 0x61, 0x57, 0x9d, 0xad, 0x3c, 0xc5,
	0x7f, 0x0d, 0x2b, 0x53, 0x1a, 0xa5, 0xd7, 0xd4, 0x3a, 0x54, 0x3a, 0xe7, 0x70, 0xec, 0x9f, 0xea,
	0x64, 0x0e, 0xf5, 0xe7, 0x0e, 0x4f, 0xf4, 0x5f, 0x68, 0xf7, 0xb8, 0x88, 0xb4, 0xd0, 0x27, 0xc4,
	0x54, 0xbf, 0x0d, 0x7a, 0xcb, 0xa0, 0x07, 0x0e, 0xf4, 0x29, 0xb4, 0xc7, 0x05, 0xaa, 0x7c, 0x1f,
	0xaa, 0x77, 0xdf, 0x87, 0xb9, 0xa9, 0xfb, 0xa0, 0x77, 0xd4, 0xe3, 0x5c, 0x31, 0xae, 0x86, 0xb1,
	0x2c, 0xc6, 0xfe, 0x9f, 0x35, 0x40, 0xd3, 0x1a, 0x86, 0x9e, 0xc1, 0x32, 0x55, 0x39, 0x23, 0x32,
	0x94, 0x8a, 0x0b, 0x93, 0x2d, 0xbd, 0x6e, 0x2d, 0x68, 0x59, 0xf8, 0x5c, 0xa3, 0x87, 0xf1, 0x84,
	0x6c, 0xcc, 0x4d, 0xca, 0x06, 0xfa, 0x1e, 0x16, 0x79, 0x66, 0x23, 0x5e, 0x9b, 0x7c, 0x59, 0x4c,
	0x2f, 0x7b, 0x6a, 0x5d, 0x83, 0x62, 0x8e, 0x3e, 0x5c, 0x8a, 0x19, 0xed, 0xe9, 0xee, 0x96, 0x8b,
	0xc4, 0x65, 0xbb, 0x51, 0x60, 0x17, 0x22, 0xd1, 0x17, 0xd1, 0xd6, 0x6f, 0x4a, 0x98, 0x0a, 0x7b,
	0x09, 0xee, 0x4b, 0xf3, 0x88, 0xa9, 0x15, 0x75, 0xad, 0xf1, 0x77, 0x1a, 0x46, 0xa7, 0xd0, 0x1a,
	0x97, 0x5e, 0xfb, 0x0c, 0x79, 0x71, 0xd7, 0x96, 0xc6, 0xd4, 0x36, 0x18, 0x9f, 0x8f, 0xde, 0x01,
	0x60, 0xa5, 0x04, 0xbd, 0xcc, 0x15, 0x91, 0xee, 0xe1, 0xf1, 0xec, 0x2e, 0xb6, 0xbd, 0xa1, 0x77,
	0x50, 0x9a, 0x89, 0xbe, 0x86, 0xfb, 0xd1, 0x00, 0xb3, 0x3e, 0x09, 0x4b, 0x47, 0x91, 0x0a, 0x2b,
	0x62, 0x9e, 0x21, 0xf5, 0x60, 0xdd, 0x9a, 0x8f, 0x87, 0xd6, 0x73, 0x6d, 0xf4, 0x0f, 0x60, 0xf3,
	0xd6, 0x20, 0xa2, 0xff, 0xc1, 0x72, 0x96, 0x8b, 0x68, 0xa0, 0xdf, 0x15, 0x29, 0x51, 0x03, 0x5e,
	0xa4, 0xb0, 0x5d, 0xc0, 0xc7, 0x06, 0xf5, 0x1f, 0xc3, 0xa3, 0x7f, 0x39, 0xb7, 0xff, 0x10, 0x1e,
	0xdc, 0x75, 0x18, 0xff, 0xb7, 0x39, 0x58, 0x9b, 0xd5, 0xb6, 0xd0, 0x11, 0x3c, 0x91, 0x57, 0x34,
	0x0b, 0x33, 0x41, 0x53, 0x2c, 0x6e, 0x42, 0x49, 0x54, 0x9e, 0x85, 0xc3, 0x46, 0x28, 0x88, 0x4d,
	0x84, 0xad, 0xc6, 0x47, 0xda, 0xf5, 0xcc, 0x7a, 0x9e, 0x6b, 0xc7, 0x82, 0xd2, 0xb9, 0xa1, 0x9f,
	0xe0, 0xe5, 0x1d, 0x6c, 0x58, 0x86, 0x82, 0xf4, 0xf3, 0x04, 0x0b, 0xfb, 0x64, 0xb0, 0xa5, 0xf5,
	0xf4, 0x16, 0xd2, 0x3d, 0x19, 0x58, 0x67, 0x53, 0xb4, 0x1f, 0x60, 0x13, 0xe7, 0x8a, 0x17, 0x8c,
	0x71, 0x4a, 0x59, 0xc1, 0xab, 0x6f, 0x6e, 0xed, 0x79, 0x63, 0x77, 0xa7, 0xd4, 0xa1, 0x73, 0xc5,
	0x2d, 0x97, 0x76, 0x74, 0x84, 0x32, 0xd8, 0xc0, 0x33, 0x71, 0xff, 0xd7, 0x2a, 0x6c, 0xcc, 0x9e,
	0x82, 0xfe, 0x03, 0x20, 0x07, 0x5c, 0xa8, 0xb2, 0x80, 0xd6, 0x0d, 0x62, 0xa4, 0x73, 0x1b, 0xea,
	0xbd, 0x3c, 0x49, 0xac, 0x75, 0xce, 0x95, 0x6e, 0x9e, 0x24, 0xc6, 0xf8, 0x04, 0x5a, 0x85, 0xec,
	0x85, 0x03, 0x2c, 0x07, 0xa6, 0xc2, 0x9a, 0x41, 0xb3, 0x00, 0xbb, 0x58, 0x0e, 0xd0, 0x06, 0x2c,
	0x0c, 0x68, 0x1c, 0x13, 0x66, 0x6a, 0x67, 0x29, 0x70, 0x23, 0xff, 0xaf, 0xaa, 0x7e, 0x01, 0xc8,
	0x3c, 0x51, 0xc5, 0x8f, 0x98, 0xee, 0xb9, 0x71, 0xa9, 0xe7, 0xc6, 0x74, 0xfa, 0xe7, 0x6c, 0x6e,
	0xfa, 0xe7, 0xec, 0x2b, 0x68, 0x10, 0xdd, 0x14, 0xc2, 0x68, 0x80, 0x29, 0x73, 0xb1, 0x5a, 0x2b,
	0x3f, 0x5d, 0x05, 0x17, 0xfb, 0xda, 0x16, 0x00, 0x19, 0x7e, 0xfb, 0xe7, 0xb0, 0xa0, 0xef, 0x70,
	0x2e, 0x51, 0x07, 0x9a, 0x7b, 0xd1, 0x15, 0xe3, 0x9f, 0x12, 0x12, 0xf7, 0x49, 0xdc, 0xa9, 0xa0,
	0x3a, 0xdc, 0x33, 0xb3, 0x3a, 0x55, 0xb4, 0x01, 0xc8, 0xfd, 0xcc, 0xbd, 0x33, 0x9d, 0xd8, 0xe2,
	0x73, 0x68, 0x09, 0xe6, 0x0f, 0xe3, 0x84, 0x74, 0x6a, 0x08, 0x60, 0xe1, 0x84, 0xab, 0x13, 0xfe,
	0xa9, 0x33, 0xef, 0xff, 0x51, 0x05, 0x18, 0xad, 0x87, 0xde, 0xc0, 0x7a, 0xc2, 0x23, 0x9c, 0xd0,
	0x5f, 0x48, 0x1c, 0xc6, 0x44, 0x46, 0x82, 0x66, 0xc3, 0xeb, 0x56, 0x0f, 0xd6, 0x86, 0xc6, 0x83,
	0x91, 0x0d, 0x7d, 0x09, 0x1b, 0xb9, 0x0c, 0x09, 0xeb, 0x27, 0x54, 0x0e, 0xc6, 0x66, 0xd9, 0xc3,
	0xaf, 0xe5, 0xf2, 0xad, 0x35, 0x96, 0x67, 0x3d, 0xd6, 0x2f, 0x78, 0x1d, 0x85, 0x98, 0xa7, 0x36,
	0x0c, 0x26, 0x50, 0x06, 0x3b, 0x30, 0x90, 0x4e, 0xb5, 0x0b, 0x94, 0x7e, 0x91, 0xea, 0x6c, 0xdc,
	0x0b, 0xea, 0x36, 0x22, 0x3c, 0x26, 0x97, 0x0b, 0x26, 0x5c, 0x6f, 0xfe, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0x7b, 0x6b, 0x9d, 0x37, 0x0f, 0x00, 0x00,
}
