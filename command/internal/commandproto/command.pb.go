// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command/internal/commandproto/command.proto

/*
Package commandproto is a generated protocol buffer package.

It is generated from these files:
	command/internal/commandproto/command.proto

It has these top-level messages:
	Event
	Payload
	Command
	ScheduleOSUpdate
	OSUpdate
	ScheduleOSUpdateScan
	AccountConfiguration
	AutoSetupAdminAccounts
	DeviceInformation
	InstallProfile
	RemoveProfile
	InstallApplication
*/
package commandproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	Id         string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Time       int64    `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Payload    *Payload `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	DeviceUdid string   `protobuf:"bytes,4,opt,name=device_udid,json=deviceUdid" json:"device_udid,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetPayload() *Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Event) GetDeviceUdid() string {
	if m != nil {
		return m.DeviceUdid
	}
	return ""
}

type Payload struct {
	CommandUuid string   `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid" json:"command_uuid,omitempty"`
	Command     *Command `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Payload) GetCommandUuid() string {
	if m != nil {
		return m.CommandUuid
	}
	return ""
}

func (m *Payload) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type Command struct {
	RequestType          string                `protobuf:"bytes,1,opt,name=request_type,json=requestType" json:"request_type,omitempty"`
	DeviceInformation    *DeviceInformation    `protobuf:"bytes,2,opt,name=device_information,json=deviceInformation" json:"device_information,omitempty"`
	InstallProfile       *InstallProfile       `protobuf:"bytes,3,opt,name=install_profile,json=installProfile" json:"install_profile,omitempty"`
	InstallApplication   *InstallApplication   `protobuf:"bytes,4,opt,name=install_application,json=installApplication" json:"install_application,omitempty"`
	AccountConfiguration *AccountConfiguration `protobuf:"bytes,5,opt,name=account_configuration,json=accountConfiguration" json:"account_configuration,omitempty"`
	ScheduleOsUpdate     *ScheduleOSUpdate     `protobuf:"bytes,6,opt,name=schedule_os_update,json=scheduleOsUpdate" json:"schedule_os_update,omitempty"`
	ScheduleOsUpdateScan *ScheduleOSUpdateScan `protobuf:"bytes,7,opt,name=schedule_os_update_scan,json=scheduleOsUpdateScan" json:"schedule_os_update_scan,omitempty"`
	RemoveProfile        *RemoveProfile        `protobuf:"bytes,8,opt,name=remove_profile,json=removeProfile" json:"remove_profile,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Command) GetRequestType() string {
	if m != nil {
		return m.RequestType
	}
	return ""
}

func (m *Command) GetDeviceInformation() *DeviceInformation {
	if m != nil {
		return m.DeviceInformation
	}
	return nil
}

func (m *Command) GetInstallProfile() *InstallProfile {
	if m != nil {
		return m.InstallProfile
	}
	return nil
}

func (m *Command) GetInstallApplication() *InstallApplication {
	if m != nil {
		return m.InstallApplication
	}
	return nil
}

func (m *Command) GetAccountConfiguration() *AccountConfiguration {
	if m != nil {
		return m.AccountConfiguration
	}
	return nil
}

func (m *Command) GetScheduleOsUpdate() *ScheduleOSUpdate {
	if m != nil {
		return m.ScheduleOsUpdate
	}
	return nil
}

func (m *Command) GetScheduleOsUpdateScan() *ScheduleOSUpdateScan {
	if m != nil {
		return m.ScheduleOsUpdateScan
	}
	return nil
}

func (m *Command) GetRemoveProfile() *RemoveProfile {
	if m != nil {
		return m.RemoveProfile
	}
	return nil
}

type ScheduleOSUpdate struct {
	Updates []*OSUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
}

func (m *ScheduleOSUpdate) Reset()                    { *m = ScheduleOSUpdate{} }
func (m *ScheduleOSUpdate) String() string            { return proto.CompactTextString(m) }
func (*ScheduleOSUpdate) ProtoMessage()               {}
func (*ScheduleOSUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ScheduleOSUpdate) GetUpdates() []*OSUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type OSUpdate struct {
	ProductKey    string `protobuf:"bytes,1,opt,name=product_key,json=productKey" json:"product_key,omitempty"`
	InstallAction string `protobuf:"bytes,2,opt,name=install_action,json=installAction" json:"install_action,omitempty"`
}

func (m *OSUpdate) Reset()                    { *m = OSUpdate{} }
func (m *OSUpdate) String() string            { return proto.CompactTextString(m) }
func (*OSUpdate) ProtoMessage()               {}
func (*OSUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OSUpdate) GetProductKey() string {
	if m != nil {
		return m.ProductKey
	}
	return ""
}

func (m *OSUpdate) GetInstallAction() string {
	if m != nil {
		return m.InstallAction
	}
	return ""
}

type ScheduleOSUpdateScan struct {
	Force bool `protobuf:"varint,1,opt,name=force" json:"force,omitempty"`
}

func (m *ScheduleOSUpdateScan) Reset()                    { *m = ScheduleOSUpdateScan{} }
func (m *ScheduleOSUpdateScan) String() string            { return proto.CompactTextString(m) }
func (*ScheduleOSUpdateScan) ProtoMessage()               {}
func (*ScheduleOSUpdateScan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ScheduleOSUpdateScan) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type AccountConfiguration struct {
	SkipPrimarySetupAccountCreation     bool                      `protobuf:"varint,1,opt,name=skip_primary_setup_account_creation,json=skipPrimarySetupAccountCreation" json:"skip_primary_setup_account_creation,omitempty"`
	SetPrimarySetupAccountAsRegularUser bool                      `protobuf:"varint,2,opt,name=set_primary_setup_account_as_regular_user,json=setPrimarySetupAccountAsRegularUser" json:"set_primary_setup_account_as_regular_user,omitempty"`
	AutoSetupAdminAccounts              []*AutoSetupAdminAccounts `protobuf:"bytes,3,rep,name=auto_setup_admin_accounts,json=autoSetupAdminAccounts" json:"auto_setup_admin_accounts,omitempty"`
}

func (m *AccountConfiguration) Reset()                    { *m = AccountConfiguration{} }
func (m *AccountConfiguration) String() string            { return proto.CompactTextString(m) }
func (*AccountConfiguration) ProtoMessage()               {}
func (*AccountConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountConfiguration) GetSkipPrimarySetupAccountCreation() bool {
	if m != nil {
		return m.SkipPrimarySetupAccountCreation
	}
	return false
}

func (m *AccountConfiguration) GetSetPrimarySetupAccountAsRegularUser() bool {
	if m != nil {
		return m.SetPrimarySetupAccountAsRegularUser
	}
	return false
}

func (m *AccountConfiguration) GetAutoSetupAdminAccounts() []*AutoSetupAdminAccounts {
	if m != nil {
		return m.AutoSetupAdminAccounts
	}
	return nil
}

type AutoSetupAdminAccounts struct {
	ShortName    string `protobuf:"bytes,1,opt,name=short_name,json=shortName" json:"short_name,omitempty"`
	FullName     string `protobuf:"bytes,2,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	PasswordHash []byte `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Hidden       bool   `protobuf:"varint,4,opt,name=hidden" json:"hidden,omitempty"`
}

func (m *AutoSetupAdminAccounts) Reset()                    { *m = AutoSetupAdminAccounts{} }
func (m *AutoSetupAdminAccounts) String() string            { return proto.CompactTextString(m) }
func (*AutoSetupAdminAccounts) ProtoMessage()               {}
func (*AutoSetupAdminAccounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AutoSetupAdminAccounts) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *AutoSetupAdminAccounts) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *AutoSetupAdminAccounts) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *AutoSetupAdminAccounts) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

type DeviceInformation struct {
	Queries []string `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
}

func (m *DeviceInformation) Reset()                    { *m = DeviceInformation{} }
func (m *DeviceInformation) String() string            { return proto.CompactTextString(m) }
func (*DeviceInformation) ProtoMessage()               {}
func (*DeviceInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeviceInformation) GetQueries() []string {
	if m != nil {
		return m.Queries
	}
	return nil
}

type InstallProfile struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *InstallProfile) Reset()                    { *m = InstallProfile{} }
func (m *InstallProfile) String() string            { return proto.CompactTextString(m) }
func (*InstallProfile) ProtoMessage()               {}
func (*InstallProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InstallProfile) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type RemoveProfile struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *RemoveProfile) Reset()                    { *m = RemoveProfile{} }
func (m *RemoveProfile) String() string            { return proto.CompactTextString(m) }
func (*RemoveProfile) ProtoMessage()               {}
func (*RemoveProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RemoveProfile) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type InstallApplication struct {
	ItunesStoreId         int64  `protobuf:"varint,1,opt,name=itunes_store_id,json=itunesStoreId" json:"itunes_store_id,omitempty"`
	Identifier            string `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	ManifestUrl           string `protobuf:"bytes,3,opt,name=manifest_url,json=manifestUrl" json:"manifest_url,omitempty"`
	ManagementFlags       int64  `protobuf:"varint,4,opt,name=management_flags,json=managementFlags" json:"management_flags,omitempty"`
	NotManaged            bool   `protobuf:"varint,5,opt,name=not_managed,json=notManaged" json:"not_managed,omitempty"`
	ChangeManagementState string `protobuf:"bytes,6,opt,name=change_management_state,json=changeManagementState" json:"change_management_state,omitempty"`
}

func (m *InstallApplication) Reset()                    { *m = InstallApplication{} }
func (m *InstallApplication) String() string            { return proto.CompactTextString(m) }
func (*InstallApplication) ProtoMessage()               {}
func (*InstallApplication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *InstallApplication) GetItunesStoreId() int64 {
	if m != nil {
		return m.ItunesStoreId
	}
	return 0
}

func (m *InstallApplication) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *InstallApplication) GetManifestUrl() string {
	if m != nil {
		return m.ManifestUrl
	}
	return ""
}

func (m *InstallApplication) GetManagementFlags() int64 {
	if m != nil {
		return m.ManagementFlags
	}
	return 0
}

func (m *InstallApplication) GetNotManaged() bool {
	if m != nil {
		return m.NotManaged
	}
	return false
}

func (m *InstallApplication) GetChangeManagementState() string {
	if m != nil {
		return m.ChangeManagementState
	}
	return ""
}

func init() {
	proto.RegisterType((*Event)(nil), "commandproto.Event")
	proto.RegisterType((*Payload)(nil), "commandproto.Payload")
	proto.RegisterType((*Command)(nil), "commandproto.Command")
	proto.RegisterType((*ScheduleOSUpdate)(nil), "commandproto.ScheduleOSUpdate")
	proto.RegisterType((*OSUpdate)(nil), "commandproto.OSUpdate")
	proto.RegisterType((*ScheduleOSUpdateScan)(nil), "commandproto.ScheduleOSUpdateScan")
	proto.RegisterType((*AccountConfiguration)(nil), "commandproto.AccountConfiguration")
	proto.RegisterType((*AutoSetupAdminAccounts)(nil), "commandproto.AutoSetupAdminAccounts")
	proto.RegisterType((*DeviceInformation)(nil), "commandproto.DeviceInformation")
	proto.RegisterType((*InstallProfile)(nil), "commandproto.InstallProfile")
	proto.RegisterType((*RemoveProfile)(nil), "commandproto.RemoveProfile")
	proto.RegisterType((*InstallApplication)(nil), "commandproto.InstallApplication")
}

func init() { proto.RegisterFile("command/internal/commandproto/command.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 861 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdd, 0x72, 0x1b, 0x35,
	0x14, 0xc7, 0xc7, 0x76, 0x12, 0xdb, 0xc7, 0xb1, 0x93, 0x0a, 0x27, 0x35, 0x53, 0x68, 0xcc, 0x06,
	0x98, 0x94, 0x8f, 0x84, 0x29, 0x33, 0xdc, 0x87, 0xb6, 0x0c, 0x19, 0x68, 0x1b, 0x64, 0x0c, 0xc3,
	0x05, 0xa3, 0x11, 0x2b, 0xd9, 0xd6, 0x74, 0x57, 0xda, 0xea, 0x23, 0x8c, 0x2f, 0xb8, 0xe2, 0x09,
	0x78, 0x00, 0xde, 0x8c, 0x87, 0x61, 0x56, 0x5a, 0x39, 0x5e, 0xdb, 0xbd, 0xf3, 0xf9, 0x9f, 0xbf,
	0x7e, 0x3a, 0xd6, 0x39, 0x7b, 0xe0, 0xf3, 0x54, 0xe5, 0x39, 0x95, 0xec, 0x4a, 0x48, 0xcb, 0xb5,
	0xa4, 0xd9, 0x55, 0x25, 0x14, 0x5a, 0x59, 0x15, 0x83, 0x4b, 0x1f, 0xa1, 0xc3, 0xf5, 0x5c, 0xf2,
	0x17, 0xec, 0xbf, 0xb8, 0xe3, 0xd2, 0xa2, 0x01, 0x34, 0x05, 0x1b, 0x35, 0xc6, 0x8d, 0x8b, 0x2e,
	0x6e, 0x0a, 0x86, 0x10, 0xec, 0x59, 0x91, 0xf3, 0x51, 0x73, 0xdc, 0xb8, 0x68, 0x61, 0xff, 0x1b,
	0x5d, 0x41, 0xbb, 0xa0, 0xcb, 0x4c, 0x51, 0x36, 0x6a, 0x8d, 0x1b, 0x17, 0xbd, 0xa7, 0x27, 0x97,
	0xeb, 0xb0, 0xcb, 0xdb, 0x90, 0xc4, 0xd1, 0x85, 0xce, 0xa0, 0xc7, 0xf8, 0x9d, 0x48, 0x39, 0x71,
	0x4c, 0xb0, 0xd1, 0x9e, 0xa7, 0x43, 0x90, 0xa6, 0x4c, 0xb0, 0xe4, 0x77, 0x68, 0x57, 0x87, 0xd0,
	0x47, 0x10, 0x2b, 0x23, 0xce, 0xad, 0x4a, 0xe9, 0x55, 0xda, 0xd4, 0x09, 0x56, 0xde, 0x5f, 0x85,
	0xbe, 0xac, 0xad, 0xfb, 0x9f, 0x85, 0x00, 0x47, 0x57, 0xf2, 0xdf, 0x1e, 0xb4, 0x2b, 0xb1, 0xe4,
	0x6b, 0xfe, 0xd6, 0x71, 0x63, 0x89, 0x5d, 0x16, 0x3c, 0xf2, 0x2b, 0xed, 0xe7, 0x65, 0xc1, 0xd1,
	0x2b, 0x40, 0x55, 0xb9, 0x42, 0xce, 0x94, 0xce, 0xa9, 0x15, 0x4a, 0x56, 0x57, 0x9d, 0xd5, 0xaf,
	0x7a, 0xee, 0x7d, 0x37, 0xf7, 0x36, 0xfc, 0x80, 0x6d, 0x4a, 0xe8, 0x05, 0x1c, 0x09, 0x69, 0x2c,
	0xcd, 0x32, 0x52, 0x68, 0x35, 0x13, 0x19, 0xaf, 0xde, 0xed, 0x83, 0x3a, 0xec, 0x26, 0x98, 0x6e,
	0x83, 0x07, 0x0f, 0x44, 0x2d, 0x46, 0x3f, 0xc1, 0x7b, 0x11, 0x43, 0x8b, 0x22, 0x13, 0x69, 0xa8,
	0x6b, 0xcf, 0xa3, 0xc6, 0x3b, 0x51, 0xd7, 0xf7, 0x3e, 0x8c, 0xc4, 0x96, 0x86, 0x7e, 0x85, 0x13,
	0x9a, 0xa6, 0xca, 0x49, 0x4b, 0x52, 0x25, 0x67, 0x62, 0xee, 0x74, 0x80, 0xee, 0x7b, 0x68, 0x52,
	0x87, 0x5e, 0x07, 0xeb, 0xb3, 0x75, 0x27, 0x1e, 0xd2, 0x1d, 0x2a, 0xfa, 0x11, 0x90, 0x49, 0x17,
	0x9c, 0xb9, 0x8c, 0x13, 0x65, 0x88, 0x2b, 0x18, 0xb5, 0x7c, 0x74, 0xe0, 0xa9, 0x8f, 0xeb, 0xd4,
	0x49, 0xe5, 0x7b, 0x3d, 0x99, 0x7a, 0x17, 0x3e, 0x8e, 0x27, 0x5f, 0x9b, 0xa0, 0xa0, 0xdf, 0xe0,
	0xe1, 0x36, 0x8d, 0x98, 0x94, 0xca, 0x51, 0x7b, 0x57, 0xa1, 0x9b, 0xc8, 0x49, 0x4a, 0x25, 0x1e,
	0x6e, 0x62, 0x4b, 0x15, 0x7d, 0x0b, 0x03, 0xcd, 0x73, 0x75, 0xc7, 0x57, 0xad, 0xe9, 0x78, 0xe2,
	0xa3, 0x3a, 0x11, 0x7b, 0x4f, 0xec, 0x4c, 0x5f, 0xaf, 0x87, 0xc9, 0x73, 0x38, 0xde, 0xbc, 0x11,
	0x7d, 0x05, 0xed, 0x50, 0xa6, 0x19, 0x35, 0xc6, 0xad, 0x8b, 0xde, 0xd3, 0xd3, 0x3a, 0x70, 0xf5,
	0x6f, 0xa3, 0x2d, 0xc1, 0xd0, 0x59, 0x9d, 0x3e, 0x83, 0x5e, 0xa1, 0x15, 0x73, 0xa9, 0x25, 0x6f,
	0xf8, 0xb2, 0x9a, 0x51, 0xa8, 0xa4, 0x1f, 0xf8, 0x12, 0x7d, 0x02, 0x83, 0xd5, 0x2c, 0xa4, 0xab,
	0xf1, 0xec, 0xe2, 0x7e, 0x6c, 0xb2, 0x17, 0x93, 0x2f, 0x60, 0xb8, 0xeb, 0x2d, 0xd0, 0x10, 0xf6,
	0x67, 0x4a, 0xa7, 0x61, 0xfa, 0x3b, 0x38, 0x04, 0xc9, 0xbf, 0x4d, 0x18, 0x5e, 0xef, 0xee, 0xe6,
	0xb9, 0x79, 0x23, 0x0a, 0x52, 0x68, 0x91, 0x53, 0xbd, 0x24, 0x86, 0x5b, 0x57, 0x90, 0xd5, 0xe4,
	0x68, 0x1e, 0x86, 0x26, 0xc0, 0xce, 0x4a, 0xeb, 0x6d, 0x70, 0x4e, 0x4a, 0x63, 0x44, 0x56, 0x36,
	0xf4, 0x0b, 0x3c, 0x31, 0xdc, 0xbe, 0x03, 0x46, 0x0d, 0xd1, 0x7c, 0xee, 0x32, 0xaa, 0x89, 0x33,
	0x5c, 0xfb, 0xbf, 0xd5, 0xc1, 0xe7, 0x86, 0xdb, 0x1d, 0xc8, 0x6b, 0x83, 0x83, 0x77, 0x6a, 0xb8,
	0x46, 0x04, 0xde, 0xa7, 0xce, 0xaa, 0x08, 0x64, 0xb9, 0x90, 0x11, 0x6b, 0x46, 0x2d, 0xdf, 0x84,
	0x8f, 0x37, 0x06, 0xda, 0x59, 0x15, 0x78, 0xa5, 0xb9, 0x82, 0x1a, 0x7c, 0x4a, 0x77, 0xea, 0xc9,
	0x3f, 0x0d, 0x38, 0xdd, 0x7d, 0x04, 0x7d, 0x08, 0x60, 0x16, 0x4a, 0x5b, 0x22, 0x69, 0x1e, 0x77,
	0x4a, 0xd7, 0x2b, 0xaf, 0x68, 0xce, 0xd1, 0x23, 0xe8, 0xce, 0x5c, 0x96, 0x85, 0x6c, 0xe8, 0x54,
	0xa7, 0x14, 0x7c, 0xf2, 0x1c, 0xfa, 0x05, 0x35, 0xe6, 0x4f, 0xa5, 0x19, 0x59, 0x50, 0xb3, 0xf0,
	0xcb, 0xe1, 0x10, 0x1f, 0x46, 0xf1, 0x7b, 0x6a, 0x16, 0xe8, 0x14, 0x0e, 0x16, 0x82, 0x31, 0x1e,
	0xbe, 0xf7, 0x0e, 0xae, 0xa2, 0xe4, 0x4b, 0x78, 0xb0, 0xb5, 0x83, 0xd0, 0x08, 0xda, 0x6f, 0x1d,
	0xd7, 0xa2, 0x1a, 0xbe, 0x2e, 0x8e, 0x61, 0xf2, 0x19, 0x0c, 0xea, 0x5b, 0xa6, 0xf4, 0xc6, 0x65,
	0xde, 0xf0, 0xf7, 0xc6, 0x30, 0xb9, 0x82, 0x7e, 0x6d, 0xec, 0xd1, 0x63, 0x00, 0xc1, 0xb8, 0xb4,
	0x62, 0x26, 0xb8, 0x8e, 0x43, 0x79, 0xaf, 0x24, 0x7f, 0x37, 0x01, 0x6d, 0x2f, 0x1e, 0xf4, 0x29,
	0x1c, 0x09, 0xeb, 0x24, 0x37, 0xc4, 0x58, 0xa5, 0x39, 0xa9, 0x96, 0x7a, 0x0b, 0xf7, 0x83, 0x3c,
	0x29, 0xd5, 0x1b, 0xb6, 0x81, 0x6f, 0x6e, 0xe2, 0xcb, 0xcd, 0x9d, 0x53, 0x29, 0x66, 0xe5, 0xea,
	0x76, 0x3a, 0xf3, 0xcf, 0xd4, 0xc5, 0xbd, 0xa8, 0x4d, 0x75, 0x86, 0x9e, 0xc0, 0x71, 0x4e, 0x25,
	0x9d, 0xf3, 0x9c, 0x4b, 0x4b, 0x66, 0x19, 0x9d, 0x1b, 0xff, 0x5e, 0x2d, 0x7c, 0x74, 0xaf, 0x7f,
	0x57, 0xca, 0xe5, 0x27, 0x26, 0x95, 0x25, 0x41, 0x66, 0x7e, 0xe1, 0x75, 0x30, 0x48, 0x65, 0x5f,
	0x06, 0x05, 0x7d, 0x03, 0x0f, 0xd3, 0x05, 0x95, 0x73, 0x4e, 0xd6, 0x90, 0xc6, 0xc6, 0x3d, 0xd6,
	0xc5, 0x27, 0x21, 0xfd, 0x72, 0x95, 0x9d, 0x94, 0xc9, 0x3f, 0x0e, 0xfc, 0x6c, 0x7d, 0xfd, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xe5, 0x91, 0x05, 0x8e, 0x07, 0x00, 0x00,
}
